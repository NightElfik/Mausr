// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Mausr.Web.Controllers
{
    public partial class PlotController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PlotController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PlotController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RosenbrockFunction()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RosenbrockFunction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RosenbrockFunctionPlot()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RosenbrockFunctionPlot);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CrazySinCosFunction()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CrazySinCosFunction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CrazySinCosFunctionPlot()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CrazySinCosFunctionPlot);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PlotController Actions { get { return MVC.Plot; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Plot";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Plot";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string RosenbrockFunction = "RosenbrockFunction";
            public readonly string RosenbrockFunctionPlot = "RosenbrockFunctionPlot";
            public readonly string CrazySinCosFunction = "CrazySinCosFunction";
            public readonly string CrazySinCosFunctionPlot = "CrazySinCosFunctionPlot";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string RosenbrockFunction = "RosenbrockFunction";
            public const string RosenbrockFunctionPlot = "RosenbrockFunctionPlot";
            public const string CrazySinCosFunction = "CrazySinCosFunction";
            public const string CrazySinCosFunctionPlot = "CrazySinCosFunctionPlot";
        }


        static readonly ActionParamsClass_RosenbrockFunction s_params_RosenbrockFunction = new ActionParamsClass_RosenbrockFunction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RosenbrockFunction RosenbrockFunctionParams { get { return s_params_RosenbrockFunction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RosenbrockFunction
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_RosenbrockFunctionPlot s_params_RosenbrockFunctionPlot = new ActionParamsClass_RosenbrockFunctionPlot();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RosenbrockFunctionPlot RosenbrockFunctionPlotParams { get { return s_params_RosenbrockFunctionPlot; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RosenbrockFunctionPlot
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_CrazySinCosFunction s_params_CrazySinCosFunction = new ActionParamsClass_CrazySinCosFunction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CrazySinCosFunction CrazySinCosFunctionParams { get { return s_params_CrazySinCosFunction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CrazySinCosFunction
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_CrazySinCosFunctionPlot s_params_CrazySinCosFunctionPlot = new ActionParamsClass_CrazySinCosFunctionPlot();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CrazySinCosFunctionPlot CrazySinCosFunctionPlotParams { get { return s_params_CrazySinCosFunctionPlot; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CrazySinCosFunctionPlot
        {
            public readonly string model = "model";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
                public readonly string Plot = "Plot";
            }
            public readonly string Index = "~/Views/Plot/Index.cshtml";
            public readonly string Plot = "~/Views/Plot/Plot.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PlotController : Mausr.Web.Controllers.PlotController
    {
        public T4MVC_PlotController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RosenbrockFunctionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Mausr.Web.Models.PlotViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult RosenbrockFunction(Mausr.Web.Models.PlotViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RosenbrockFunction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RosenbrockFunctionOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void RosenbrockFunctionPlotOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Mausr.Web.Models.PlotViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult RosenbrockFunctionPlot(Mausr.Web.Models.PlotViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RosenbrockFunctionPlot);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RosenbrockFunctionPlotOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void CrazySinCosFunctionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Mausr.Web.Models.PlotViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult CrazySinCosFunction(Mausr.Web.Models.PlotViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CrazySinCosFunction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CrazySinCosFunctionOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void CrazySinCosFunctionPlotOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Mausr.Web.Models.PlotViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult CrazySinCosFunctionPlot(Mausr.Web.Models.PlotViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CrazySinCosFunctionPlot);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CrazySinCosFunctionPlotOverride(callInfo, model);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
