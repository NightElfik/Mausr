@model LearnBatchViewModel

@{
	ViewBag.Title = "Learning";
	int imageSize = 256;
}

<h1>Learning: @Model.Symbol.SymbolStr <small>@Model.Symbol.Name</small></h1>

@using (Html.BeginForm()) {
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(m => m.DrawnUsingTouch)

		<div class="form-group col-sm-6">
			<canvas id="canvas" class="img-thumbnail" width="@imageSize" height="@imageSize"></canvas>
		</div>

		<div class="form-group col-sm-6">
			<input type="submit" value="Save" class="btn btn-primary btn-lg btn-block" />
			<a class="btn btn-default btn-lg btn-block" id="clearBtn" href="#" role="button">Clear</a>
			@(Html.ActionLink("Skip", MVC.Learn.Batch().AddRouteValues(new BatchInitViewModel() {
				BatchNumber = Model.BatchNumber,
				SymbolNumber = Model.SymbolNumber + 1,
			}), new { @class = "btn btn-default btn-lg btn-block", role = "button" }))

			@if (Model.SavedDrawing != null) {
				<div class="alert alert-success" style="margin-top: 6px;">
					<a href="#" class="close" data-dismiss="alert">&times;</a>
					<strong>Success!</strong> Drawing of '@Model.SavedDrawing.Symbol.SymbolStr' was successfully saved under ID @Model.SavedDrawing.SymbolDrawingId.
				</div>
			}
		</div>

		<div class="form-group">
			@Html.TextAreaFor(m => m.JsonData, 10, 40, new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.JsonData, "", new { @class = "text-danger" })
		</div>
	</div>
}

<p>Symbol: @(Model.SymbolNumber + 1) / @Model.SymbolsCount, Batch ID: @Model.BatchNumber</p>
@{
	MyHtml.RequireScript(Links.Scripts.Mausr_js);
	MyHtml.RequireScript(Links.Scripts.Mausr_painter_js);
}
@section scripts {
	<script>
		$(function () {
			new MausrPainter({
				canvasId: 'canvas',
				jsonTextId: '@Html.NameFor(m => m.JsonData)',
				clearBtnId: 'clearBtn',
				drawnUsingTouchId: '@Html.NameFor(m => m.DrawnUsingTouch)'
			});
		});
	</script>
}


