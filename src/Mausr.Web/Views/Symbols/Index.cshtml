@model IPagination<Symbol>

@{
	ViewBag.Title = "Symbols";
	var pagination = Model.Html();
}

<h1>@ViewBag.Title</h1>

<p>
	This page lists all symbols that arecurrently in the database and system can be trained to recognize given the training data.
</p>

@pagination



<ul class="symbolSearchResults">
	@foreach (var symbol in Model) {
		int utfCode = char.ConvertToUtf32(symbol.SymbolStr, 0);
		<li>
			<div class="cont">
				<h2>@symbol.SymbolStr</h2>
				<p>@symbol.Name</p>
				<p>
					HTML:
					@if (symbol.HtmlEntity != null) {
						<code>&amp;@symbol.HtmlEntity</code>@: or
					}
					<code>&amp;#@utfCode;</code>
				</p>
				<p>UTF: <code>U+@Convert.ToString(utfCode, 16)</code></p>
				<p class="conf">@Html.ActionLink("Drawings", MVC.SymbolDrawings.Index(symbol.SymbolId))</p>
			</div>
		</li>
	}
</ul>

@pagination
